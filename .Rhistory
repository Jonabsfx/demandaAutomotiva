PERUA == 1 ~ 8
))
data <- data %>% dplyr::select(-ano09, -ano10, -ano11, -ano12, -POP, -COMPAC ,
-HATCH, -SEDPOP, -SEDMED, -SEDLUXO, -MINIVAN, -PERUA)
data <- data %>% mutate(comp = comp * 1000)
modelos <- data.frame(modelo = levels(data$modelo), id_modelo = c(1:length(levels(data$modelo))))
combust <- data.frame(combust = levels(data$combust), id_combust = c(1:length(levels(data$combust))))
marca <- data.frame(marca = levels (data$marca), id_marca = c(1:length(levels(data$marca))))
data <- data %>% mutate(preco = log(preco)) %>% rename(logpreco = preco)
data <- data %>% left_join(., modelos, by = "modelo") %>% select(-modelo) %>%
mutate(id_modelo = as.factor(id_modelo))
data <- readxl::read_xlsx("base_tcc.xlsx")
colunas_fator <- c("ano", "combust", "modelo", "marca",
"marca_trad","gas","ar","dir","vid","trv","kit conf",
"aut","abs","bag")
data[colunas_fator] <- lapply(data[colunas_fator], factor)
data <- data %>% mutate(tipo_modelo = case_when(POP == 1 ~    1,
COMPAC == 1 ~ 2,
HATCH == 1 ~  3,
SEDPOP == 1 ~ 4,
SEDMED == 1 ~ 5,
SEDLUXO == 1 ~ 6,
MINIVAN == 1 ~ 7,
PERUA == 1 ~ 8
))
data <- data %>% dplyr::select(-ano09, -ano10, -ano11, -ano12, -POP, -COMPAC ,
-HATCH, -SEDPOP, -SEDMED, -SEDLUXO, -MINIVAN, -PERUA)
data <- data %>% mutate(comp = comp * 1000)
modelos <- data.frame(modelo = levels(data$modelo), id_modelo = c(1:length(levels(data$modelo))))
combust <- data.frame(combust = levels(data$combust), id_combust = c(1:length(levels(data$combust))))
marca <- data.frame(marca = levels (data$marca), id_marca = c(1:length(levels(data$marca))))
data <- data %>% mutate(preco = log(preco)) %>% rename(logpreco = preco)
data <- data %>% left_join(., modelos, by = "modelo") %>% select(-modelo) %>%
mutate(id_modelo = as.factor(id_modelo))
data <- data %>% left_join(., combust, by = "combust") %>% select(-combust) %>%
mutate(id_combust = as.factor(id_combust))
data <- data %>% left_join(., marca, by = "marca") %>% select(-marca) %>%
mutate(id_marca = as.factor(id_marca))
data <- data %>% mutate(
id_modelo = as.factor(id_modelo),
id_combust = as.factor(id_combust),
id_marca = as.factor(id_marca),
tipo_modelo = as.factor(tipo_modelo)
)
set.seed(123)
train <- data %>%
sample_frac(0.8)
train.x <- train %>% select(-quant)
test.x <- train %>% select(-quant) %>% setdiff(train.x)
X <- model.matrix(~ . -1 , data = train.x)
c(rep(1:3,2), rep(1:3,3))
library(caret)
library(tidyverse)
library(broom)
library(readxl)
library(glmnet)
library(magrittr)
library(stargazer)
library(gbm)
library(dplyr)
library(lmtest)
library(plm)
qntf <- function(a) {
return(length(levels(x)))
}
qntf(data$ano)
qntf <- function(a) {
return(length(levels(a)))
}
qntf(data$ano)
rep(1, qntf(data$ano))
levels(data$logpreco)
groups <-  map(data, function(a) {
if(levels(x$`x`) == null) {
x$`x`
}
})
groups <-  map(data, function(x) {
if(levels(x$`x`) == null) {
x$`x`
}
})
groups <-  map(data, function(a) {
if(levels(.x$`a`) == null) {
x$`a`
}
})
groups <-  map(data, ~function(a) {
if(levels(.x$`a`) == null) {
x$`a`
}
})
View(groups)
View(groups[["ano"]])
View(groups)
View(groups)
groups[["ano"]]
map(data, ~function(a) {
if(levels(.x$`a`) == null) {
x$`a`
}
})
map(data, ~function(a) {
if(levels(.x$`a`) == null) {
return(x$`a`)
}
})
map(data, ~function(a) {
if(levels(.x$`a`) == null) {
print(x$`a`)
}
})
name(data$a)
print(data$abs)
View(groups)
if(levels(.x$a) == null) {
print(x$a)
}
if(levels(.x$a) == null) {
print(.x$a)
}
map(data, ~function(a) {
if(levels(.x$`a`) == null) {
print(.x$`a`)
}
})
map(data, ~function(a) {
if(is.null(levels(.x$`a`))) {
print(.x$`a`)
}
}
)
map(data, ~function(a) {
.x
}
}
)
map(data, ~function(a) {
.x
}
)
map_chr(data, ~function(a) {
.x
}
)
map_chr(data, mean())
map_chr(data, mean(.x))
map_chr(data, ~mean(.x))
map_chr(data, function(x) {
levels(.x)
})
map_chr(data, function(.x) {
levels(.x)
})
map(data, function(.x) {
length(levels(.x))
})
map(data, function(.x) {
rep(.x,length(levels(.x)))
})
map2(data, 1:ncol(data), function(.x) {
rep(.y,length(levels(.x)))
})
map2(data, 1:ncol(data), function(.x, .y) {
rep(.y,length(levels(.x)))
})
map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}
else(
rep(.y,length(levels(.x)))
)
})
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}
else(
rep(.y,length(levels(.x)))
)
})
View(group)
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}
else(
rep(.y,length(levels(.x)))
)$value
})
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}
else(
rep(.y,length(levels(.x)))
)
})$value
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}
else(
rep(.y,length(levels(.x)))
)
})
group <- map2_int(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}
else(
rep(.y,length(levels(.x)))
)
})
View(group)
group <- map2_int(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
})
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
})
View(group)
group[["ano"]]
group <- pmap2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
})
d <- c(c(1:2), c(1:3))
rm(d)
group <- pmap2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
})
group <- map2_int(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
})
unlist
unlist(group$ano)
else(
c(rep(.y,length(levels(.x))))
) %>% map(unlist)
group <- map2_chr(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% map(unlist)
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% map(unlist)
View(group)
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}}
)
View(group)
group <- map2_int(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}}
)
rep(.y, 1) %>% unlist()
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}}
)  %>% unlist()
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}}
)  %>% unlist(use.names = F)
View(groups)
View(group)
group
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
rep(.y, 1)
}}
)  %>% map(c())
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% %>% map(c())
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% map(c())
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% map(c(.x))
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% map(.,c(.x))
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% map(.,c(unlist(.x)))
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% map(unlist)
View(group)
as.vector(group)
group <- as.vector(group)
View(group)
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% sapply(., c)
View(group)
group <- vector()
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% sapply(., c)
View(group)
unlist(group)
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))
)
}) %>% unlist(use.names= F)
View(group)
group
View(X)
ncol(X)
length(group)
X <- model.matrix(~ . , data = train.x)
View(X)
train <- data %>%
sample_frac(0.8)
train.x <- train %>% select(-quant)
View(train.x)
X <- model.matrix(~ . , data = train.x)
X <- model.matrix(~ . , data = train.x)[,-1]
model.matrix(~id_modelo,train.data )
model.matrix(~id_modelo,train.x)
model.matrix(~id_modelo - 1,train.x)
X <- model.matrix(~ .-1 , data = train.x)
View(X)
b <- c(1:4)
b[-1,]
b[-1,1]
b[-1]
b[-4]
group <- map2(data, 1:ncol(data), function(.x, .y) {
if(is.null(levels(.x))){
c(rep(.y, 1))
}
else(
c(rep(.y,length(levels(.x))))[-1]
)
}) %>% unlist(use.names= F)
length(group)
ncol(X)
library(gglasso)
gglasso(X, y, group = group, loss="ls")
modelo_grupo <- gglasso(X, y, group = group, loss="ls")
plot(modelo_grupo, xvar = "norm", label = T)
plot(modelo_grupo, xvar = "lambda")
plot(modelo_grupo)
par(mfrow=c(1,3))
plot(modelo_grupo) # plots the coefficients against the log-lambda sequence
plot(modelo_grupo,group=TRUE) # plots group norm against the log-lambda sequence
plot(modelo_grupo,log.l=FALSE) # plots against the lambda sequence
cvgrupo <- gglasso(X, y, group = group, loss="ls")
cvgrupo <- cv.lasso(X, y, group = group, loss="ls")
cvgrupo <- cv.gglasso(X, y, group = group, loss="ls", nfolds = 10)
plot(cvgrupo) # plots against the lambda sequence
test.x <- train %>% select(-quant) %>% setdiff(train.x)
test.x <- train %>% select(-quant) %>% setdiff(train.x) %>% data.matrix
train <- data %>%
sample_frac(0.8)
train.x <- train %>% select(-quant)
test.x <- train %>% select(-quant) %>% setdiff(train.x) %>% data.matrix
test.x <- train %>% select(-quant)
test.x <- train %>% select(-quant) %>%setdiff(., train.x)
test.x <- train %>% select(-quant) %>%setdiff(train, train.x)
test.x <- train %>% select(-quant) %>% setdiff(train)
test.x <- train %>% setdiff(train) %>% select(-quant)
rm(test.x)
test.x <- train %>% setdiff(train.x) %>% select(-quant)
test.x <- train %>%  select(-quant)%>%setdiff(train.x)
View(test.x)
rm(test.x)
test.x <- train %>%  select(-quant)%>%setdiff(train.x)
train.x <- sample_frac(data, 0.8)
train_index <- as.numeric(rownames(train.x))
test.x <- Default[-train_index, ]
train.x <- sample_frac(data, 0.8)
train_index <- as.numeric(rownames(train.x))
test.x <- data[-train_index, ]
View(train.x)
train.x %<>% select(-quant)
test.x %<>% select(-quant)
View(test.x)
X <- model.matrix(~ .-1 , data = train.x)
test.x %<>% select(-quant) %>% as.matrix
test.x <- data[-train_index, ] %>% select(-quant) %>% as.matrix
predictions_grp <- predict(object = modelo_grupo, newx = test.x)
predictions_grp <- predict(object = modelo_grupo, newx = test.x, type = "coef")
test.x <- data[-train_index, ] %>% select(-quant)
coef(modelo_grupo)
coef(modelo_grupo, s=cvgrupo$lambda.min)
coef(modelo, s = lasso_cv$lambda.min)
predictions <- predict(object = modelo, newx = test.x, type = "coef")
View(predictions)
RMSE(predictions)
RMSE(test.y ,predictions)
RMSE(train.y ,predictions)
RMSE(as.matrix(train.y) ,predictions)
View(predictions)
predictions@Dimnames[[1]]
RMSE(test.y ,predictions)
RMSE(predictions, test.y ,)
RMSE(predictions, test.y)
rmse(predictions, test.y)
RMSE(predictions, test.y)
predictions <- predict(object = modelo, newx = test.x)
predictions <- predict(object = modelo, newx = as.matrix(test.x))
test.x <- data[-train_index, ] %>% select(-quant) %>% data.matrix(.)
predictions <- predict(object = modelo, newx = test.x)
predictions <- predict(modelo, test.x)
modelo <- glmnet(X, y, alpha = 1)
View(X)
predictions <- predict(modelo, test.x)
train.x <- sample_frac(X, 0.8)
coef(modelo)
coef(modelo, s = lasso_cv$lambda.min)
predictions <- predict(modelo, newx = test.x, s = lasso_cv$lambda.min)
View(test.x)
str(test.x)
typeof(test.x)
test.x <- data[-train_index, ] %>% select(-quant) %>% data.matrix(.)
test.x <- data[-train_index, ] %>% select(-quant) %>% as.matrix()
View(test.x)
predictions <- predict(modelo, newx = test.x, s = lasso_cv$lambda.min)
View(predictions)
predictions@i
predictions@x
predictions@Dimnames[[1]]
View(test.x)
